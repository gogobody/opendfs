cmake_minimum_required(VERSION 3.10)
project(datanode)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CAMKE_CXX_FLAGS} -std=c++11 -lpthread -lm")
set(CMAKE_EXE_LINKER_FLAGS "-lpthread -lm")

FIND_PACKAGE(Threads)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
AUX_SOURCE_DIRECTORY(src/datanode DIR_SRCS)
AUX_SOURCE_DIRECTORY(src/cfs DIR_SRCS)
AUX_SOURCE_DIRECTORY(src/common DIR_SRCS)
AUX_SOURCE_DIRECTORY(src/core DIR_SRCS)
AUX_SOURCE_DIRECTORY(src/faio DIR_SRCS)
#AUX_SOURCE_DIRECTORY(src/namenode DIR_SRCS)
#AUX_SOURCE_DIRECTORY(src/paxos DIR_SRCS)
#AUX_SOURCE_DIRECTORY(src/* src/datanode src/core src/common src/cfs src/faio DIR_SRCS)

#include_directories(include)
#include_directories(lib)
include_directories(src/core)
include_directories(src/datanode)
include_directories(src/cfs)
include_directories(src/common)
include_directories(src/faio)
#include_directories(src/namenode)
include_directories(objs)
#include_directories(src/namenode)
#include_directories(src/paxos)
add_executable(datanode ${DIR_SRCS})

# debug here
SET(CMAKE_BUILD_TYPE "Debug")
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")

TARGET_LINK_LIBRARIES(datanode ${CMAKE_THREAD_LIBS_INIT})
TARGET_LINK_LIBRARIES(datanode m)